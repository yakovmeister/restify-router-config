"use strict";function sortRoutes(e){if(!Array.isArray(e))throw new Error("argument is expected to be an array of object, ["+typeof e+"] type is given.");return groupSortWildcards(e=groupBySlashes(e))}function groupSortWildcards(e){return Object.entries(e).map(function(e){e[0];return e[1].sort(wildCard)}).reduce(function(e,r){return r.concat(e)})}function groupBySlashes(e){return e.reduce(function(e,r){var t=r.match.split("/").length;return e[t]=e[t]||[],e[t].push(r),e},{})}function wildCard(e,r){var t=e.match.match(/\/(\:[a-zA-Z0-9_-]{1,})/g),n=r.match.match(/\/(\:[a-zA-Z0-9_-]{1,})/g),o=e.match.split("/"),a=r.match.split("/"),i=a?a.length:0;if(!t)return-1;if(!n)return 1;if(t.length===i-1)return 1;if(n.length===i-1)return-1;var u=t.map(function(e){return o.indexOf(e.replace("/",""))}).reduce(function(e,r){return(e+r)/o.length});return n.map(function(e){return a.indexOf(e.replace("/",""))}).reduce(function(e,r){return(e+r)/a.length})-u}function noop(e,r,t){}function normalizeEndpoint(e){return"/"+e.replace(/^\/|\/$/,"")}function routeTranslator(e,n,o){return Array.isArray(e)&&e.length?[].concat.apply([],e.map(function(e){var r=e.group&&e.resources,t=e.resources&&!e.controller;if(r)throw new Error("Group and Resources cannot co-exist.");if(t)throw new Error("Cannot resolve resources without specifying a controller");return e.resources?(console.log("This feature is under development"),routeTranslator(resolveResources(e),mapMiddleware([n,e.middleware]),o)):e.group?routeTranslator(e.routes,mapMiddleware([n,e.middleware]),appendPrefix(e.group,o)):routeTranslator(e,n,o)})):(n=mapMiddleware([n,e.middleware]),o=appendPrefix(e.match,o),{method:assignWithDefault(e.method,"get"),match:normalizeEndpoint(o),middleware:n,action:assignWithDefault(e.action,noop)})}function assignWithDefault(e,r){return e||r}function resolveResources(o){var a=[{method:"get",match:"/",functionName:"index"},{method:"get",match:"/:id",functionName:"view"},{method:"post",match:"/",functionName:"store"},{method:"put",match:"/:id",functionName:"update"},{method:"patch",match:"/:id",functionName:"patch"},{method:"del",match:"/:id",functionName:"delete"}];return Object.entries(o.controller).map(function(e){var r=e[0],t=e[1],n=a.find(function(e){return e.functionName===r});if(n)return{method:n.method,match:appendPrefix(n.match,o.resources),action:t}}).filter(function(e){return e})}function mapMiddleware(e){var r=[];return e.forEach(function(e){Array.isArray(e)?r.push.apply(r,e):r.push(e)}),r.filter(function(e){return e})}function appendPrefix(e,r){return void 0===r&&(r=!1),r&&(e=e.replace(/^\/|\/$/g,""),e=("/"+(r=r.replace(/^\/|\/$/g,""))+"/"+e).replace("//","/")),e.replace(/\/$/,"")}function groupMiddleware(e){var r={before:[],after:[]};return e.forEach(function(e){isValidArray(e)?isValidMiddlewarePosition(e[0])&&r[e[0]].push(e[1]):r.before.push(e)}),[r.before,r.after]}function isValidMiddlewarePosition(e){return"before"===e||"after"===e}function isValidArray(e){return Array.isArray(e)&&1<e.length}function transformRoutes(e){return(e=e.length?sortRoutes([].concat.apply([],routeTranslator(e))):[]).map(function(e){var r=[e.action];if(e.middleware.length){var t=groupMiddleware(e.middleware),n=t[0],o=t[1];r=n.concat(r,o)}return{method:e.method,endpoint:e.match,action:r}})}function configureRoutes(r,t,n){return void 0===t&&(t=!1),void 0===n&&(n=console.log),function(e){(e=transformRoutes(e)).map(function(e){return t&&n("Routing: ["+e.method+"] - "+e.endpoint),r[e.method].apply(r,[e.endpoint].concat(e.action))})}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.routeTranslator=routeTranslator,exports.transformRoutes=transformRoutes,exports.default=configureRoutes;
